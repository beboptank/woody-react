{"version":3,"sources":["images/woody.png","components/linkbutton.js","components/sectionhero.js","components/navigation.js","components/logobanner.js","Home.js","Events.js","Gallery.js","Contact.js","components/footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Button","text","linkTo","className","to","type","withRouter","defaultProps","href","SectionHero","header","heroName","buttonText","id","Navigation","event","preventDefault","isOpen","Component","LogoBanner","alt","src","logo","Home","Events","props","state","time","moment","format","events","isLoading","thisPointer","this","fetch","method","headers","body","JSON","stringify","then","response","json","setState","data","items","eventsList","map","key","summary","description","start","dateTime","length","Gallery","photos","mode","parse","photo","displayPhotos","farm","server","secret","title","Contact","icon","faFacebookSquare","faInstagramSquare","faPhoneSquare","App","path","component","exact","Error","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.0d6ab46f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/woody.0c8becd9.png\";","import React from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport '../scss/_components.scss';\r\n\r\nconst Button = ({ text, linkTo }) => {\r\n    return (\r\n        <div className='linkbuttoncontainer'>\r\n            <Link to={linkTo}>\r\n                <button className='linkbuttoncontainer__button' type='button'>{text}</button>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Button)\r\n\r\nButton.defaultProps = {\r\n    text: \"Woody\",\r\n    href: \"www.google.com\"\r\n}","import React from 'react';\r\nimport LinkButton from './linkbutton';\r\nimport \"../scss/_components.scss\";\r\n\r\nconst SectionHero = ({ header, heroName, buttonText, linkTo }) => {\r\n    return (\r\n        <div id={ heroName } className=\"herocontainer\">\r\n            <div className=\"herocontainer__items\">\r\n                <h1 className=\"herocontainer__items__header\">{header}</h1>\r\n                <LinkButton text={buttonText} linkTo={linkTo} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SectionHero;","import React, { Component } from 'react';\r\nimport { stack as Menu } from 'react-burger-menu';\r\nimport { Link, withRouter } from 'react-router-dom';\r\n\r\n\r\n\r\nclass Navigation extends Component {\r\n\r\n    showSettings (event) {\r\n        event.preventDefault();\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"navcontainer\">\r\n                <Menu \r\n                    className=\"navcontainer__burgermenu\"\r\n                    isOpen={ false }\r\n                >\r\n                    <Link id=\"home\" className=\"menu-item\" to=\"/\">home</Link>\r\n                    <Link id=\"events\" className=\"menu-item\" to=\"/events\">events</Link>\r\n                    <Link id=\"gallery\" className=\"menu-item\" to=\"/gallery\">gallery</Link>\r\n                    <Link id=\"contact\" className=\"menu-item\" to=\"/contact\">contact</Link>\r\n                    <div id=\"google_translate_element\"></div>\r\n                </Menu>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Navigation);","import React from 'react';\r\nimport \"../scss/_components.scss\";\r\nimport logo from '../images/woody.png';\r\n\r\nconst LogoBanner = () => {\r\n    return (\r\n        <div className=\"bannercontainer\">\r\n            <img alt=\"woody logo\" className=\"bannercontainer__image\" src={logo}></img>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LogoBanner;","import React from 'react';\r\nimport SectionHero from './components/sectionhero';\r\nimport Navigation from '../src/components/navigation';\r\nimport LogoBanner from '../src/components/logobanner';\r\nimport './App.scss';\r\n\r\nconst Home = () => {\r\n    return (\r\n        <div>\r\n            <Navigation />\r\n            <LogoBanner />\r\n            <SectionHero buttonText={`events`} linkTo={`/events`} heroName=\"eventHero\" header={`In here, it's summer all year round.`} />\r\n            <SectionHero buttonText={`gallery`} linkTo={`/gallery`} heroName=\"galleryHero\" header={`Here's to feeling good all the time.`} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport Navigation from '../src/components/navigation';\r\nimport LogoBanner from '../src/components/logobanner';\r\nimport moment from 'moment';\r\n\r\n\r\nclass Events extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            time: moment().format(\"dddd, MMMM Do, h:mm A\"),\r\n            events: [],\r\n            isLoading: true\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const thisPointer = this;\r\n        fetch('https://mighty-fjord-28148.herokuapp.com/events', {\r\n            method: 'get',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify()\r\n        })\r\n            .then(response => response.json())\r\n            .then(response => thisPointer.setState({\r\n                events: response.data.items\r\n            }));\r\n    }\r\n\r\n    render() {\r\n        const { time, events } = this.state;\r\n\r\n        let eventsList = events.map(function (event) {\r\n            return (\r\n                <div\r\n                    key={event.id}\r\n                    className=\"eventscontainer__timeandlist__upcomingevents__list__item\"\r\n                >\r\n                    <h2>{event.summary}{\" \"}</h2>\r\n                    <p>{event.description}</p>\r\n                    <h3>{moment(event.start.dateTime).format(\"h:mm a\")}</h3>\r\n                    <h3>{moment(event.start.dateTime).format(\"MMMM Do, YYYY\")}</h3>\r\n                </div>\r\n            );\r\n        });\r\n\r\n\r\n        return (\r\n            <div>\r\n                <Navigation />\r\n                <LogoBanner />\r\n                <div className=\"eventscontainer\">\r\n                    <div className=\"eventscontainer__timeandlist\">\r\n                        <div className=\"eventscontainer__timeandlist__currenttime\">\r\n                        {time}<br/>\r\n                        Please wait for events to load.\r\n                        </div>\r\n                        <div className=\"eventscontainer__timeandlist__upcomingevents\">\r\n                            <h1 className=\"eventscontainer__timeandlist__upcomingevents__header\">Upcoming Events</h1>\r\n                            <div className=\"eventscontainer__timeandlist__upcomingevents__list\">\r\n                                {this.state.isLoading}\r\n                                {events.length > 0 && eventsList}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    \r\n    }\r\n}\r\n\r\nexport default Events;","import React, { Component } from 'react';\r\nimport Navigation from '../src/components/navigation';\r\nimport LogoBanner from '../src/components/logobanner';\r\n\r\nclass Gallery extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            photos: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const thisPointer = this;\r\n        fetch('https://mighty-fjord-28148.herokuapp.com/gallery', {\r\n            method: 'get',\r\n            mode: 'cors',\r\n            headers: { 'Content-Type': 'text/plain' },\r\n            body: JSON.stringify()\r\n        })\r\n            .then(response => response.json())\r\n            .then(response => JSON.parse(response.text))\r\n            .then(text => thisPointer.setState({\r\n                photos: text.photos.photo\r\n            }));\r\n    }\r\n\r\n    render() {\r\n        const { photos } = this.state;\r\n\r\n        let displayPhotos = photos.map(function (photo) {\r\n            return (\r\n                <img \r\n                key={photo.id}\r\n                src={`https://farm${photo.farm}.staticflickr.com/${photo.server}/${photo.id}_${photo.secret}.jpg`}\r\n                alt={photo.title}\r\n                className=\"gallerycontainer__photogallery__photo\"\r\n                ></img>\r\n            )\r\n        })\r\n\r\n        return (\r\n            <div>\r\n                <Navigation />\r\n                <LogoBanner />\r\n                <div className=\"gallerycontainer\">\r\n                    <h1 className=\"gallerycontainer__header\">Gallery</h1>\r\n                    <div className=\"gallerycontainer__photogallery\">\r\n                        {photos.length > 0 && displayPhotos}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Gallery;","import React from 'react';\r\nimport Navigation from '../src/components/navigation';\r\nimport LogoBanner from '../src/components/logobanner';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPhoneSquare } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faFacebookSquare, faInstagramSquare } from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nconst Contact = () => {\r\n    return (\r\n        <div>\r\n            <Navigation />\r\n            <LogoBanner />\r\n            <div className=\"contactcontainer\">\r\n                <h1 className=\"contactcontainer__header\">Contact</h1>\r\n                <div className=\"contactcontainer__linkscontainer\">\r\n                    <div className=\"contactcontainer__linkscontainer__facebook\">\r\n                        <a href=\"https://www.facebook.com/woodyfukui\"><FontAwesomeIcon icon={faFacebookSquare} className=\"contactcontainer__icon\" /></a>\r\n                        <p className=\"contactcontainer__linkscontainer__facebook__text\">Facebook</p>\r\n                    </div>\r\n                    <div className=\"contactcontainer__linkscontainer__instagram\">\r\n                        <a href=\"https://www.instagram.com/woody_diary/\"><FontAwesomeIcon icon={faInstagramSquare} className=\"contactcontainer__icon\" /></a>\r\n                        <p className=\"contactcontainer__linkscontainer__instagram__text\">Instagram</p>\r\n                    </div>\r\n                    <div className=\"contactcontainer__linkscontainer__phone\">\r\n                        <FontAwesomeIcon className=\"contactcontainer__icon\" icon={faPhoneSquare} />\r\n                        <p className=\"contactcontainer__linkscontainer__phone__number\">090-6608-8099</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Contact;","import React from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div className=\"footercontainer\">\r\n            <ul className=\"footercontainer__list\">\r\n                <li><Link className=\"footercontainer__list__listitem\" to=\"/\">home</Link></li> |\r\n                <li><Link className=\"footercontainer__list__listitem\" to=\"/events\">events</Link></li> |\r\n                <li><Link className=\"footercontainer__list__listitem\" to=\"/gallery\">gallery</Link></li> |\r\n                <li><Link className=\"footercontainer__list__listitem\" to=\"/contact\">contact</Link></li>\r\n            </ul>\r\n            <p className=\"footercontainer__list__copyright\">\r\n                &copy; 2020 - 2022, woody. Created by Seth Christmus with ❤️, ☕, and React.\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Footer);","import React from 'react';\r\nimport Home from './Home';\r\nimport Events from './Events';\r\nimport Gallery from './Gallery';\r\nimport Contact from './Contact';\r\nimport Footer from '../src/components/footer';\r\nimport './App.scss';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <Switch>\r\n          <Route path=\"/\" component={Home} exact />\r\n          <Route path=\"/events\" component={Events} />\r\n          <Route path=\"/gallery\" component={Gallery} />\r\n          <Route path=\"/contact\" component={Contact} />\r\n          <Route component={Error} />\r\n        </Switch>\r\n        <Footer />\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}